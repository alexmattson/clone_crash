{"version":3,"sources":["webpack:///webpack/bootstrap 205910442196d8daabe1","webpack:///./lib/clone_clash.js","webpack:///./lib/game.js","webpack:///./lib/ship.js","webpack:///./lib/moving_object.js","webpack:///./lib/util.js","webpack:///./lib/score_board.js","webpack:///./lib/game_view.js","webpack:///./lib/coin.js","webpack:///./lib/clone.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;;;;;;;ACXD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uCAAsC,WAAW;AACjD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpJA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA0C,mBAAmB,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA,uBAAsB;AACtB;AACA,sCAAqC;AACrC;AACA,MAAK;AACL,uBAAsB;AACtB;AACA,uCAAsC;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;AC1EA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACnDA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;ACzFA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;ACpEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wBAAuB,cAAc,EAAE;;AAEvC;AACA;AACA,qBAAoB,4BAA4B,EAAE;AAClD,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAsC,aAAa;AACnD;AACA,wCAAuC,aAAa;AACpD;AACA,wCAAuC,aAAa;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACnJA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;;;;;ACxBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 205910442196d8daabe1\n **/","const Game = require(\"./game\");\nconst GameView = require(\"./game_view\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvasEl = document.getElementById(\"gameView\");\n  canvasEl.width = Game.DIM_X;\n  canvasEl.height = Game.DIM_Y;\n\n  const ctx = canvasEl.getContext(\"2d\");\n  const game = new Game();\n  new GameView(game, ctx);\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/clone_clash.js\n ** module id = 0\n ** module chunks = 0\n **/","const Ship = require('./ship');\nconst Clone = require('./clone');\nconst Coin = require('./coin');\nconst Util = require('./util');\nconst ScoreBoard = require('./score_board');\n\nclass Game {\n  constructor() {\n    this.ship = this.addShip();\n    this.coin = this.addCoin();\n\n    this.over = false;\n    this.scoreBoard = new ScoreBoard({game: this}, Util);\n    this.coins = 0;\n\n    // for clones\n    this.pathPos = null;\n    this.cloneTimer = 0;\n    this.clones = [];\n  }\n\n  addShip() {\n    return new Ship({\n      pos: [Game.DIM_X / 2, Game.DIM_Y / 2],\n      game: this\n    });\n  }\n\n  addClone() {\n    return new Clone({\n      pos: [Game.DIM_X / 2, Game.DIM_Y / 2],\n      game: this,\n      ogShip: this.ship,\n      pathPos: this.pathPos\n    });\n  }\n\n  addCoin() {\n    return new Coin({\n      pos: this.randomPosition(),\n      game: this\n    });\n  }\n\n  allObjects() {\n    let objects = [];\n    objects.push(this.coin);\n    objects = objects.concat(this.clones);\n    return objects;\n  }\n\n  checkCollisions() {\n    this.allObjects().forEach(object => {\n      if (this.ship.isCollidedWith(object)) {\n        this.ship.collideWith(object);\n      }\n    });\n  }\n\n  draw(ctx, level) {\n    ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n    if (level === 'hard') {\n      ctx.fillStyle = Game.HARD_BG_COLOR;\n    } else if (level === 'medium') {\n      ctx.fillStyle = Game.MEDIUM_BG_COLOR;\n    } else {\n      ctx.fillStyle = Game.EASY_BG_COLOR;\n    }\n    ctx.fillRect(0, 0, Game.DIM_X, Game.DIM_Y);\n\n    switch(level) {\n      case 'hard':\n        this.scoreBoard.hard(ctx, this.coins);\n        break;\n      case 'medium':\n        this.scoreBoard.medium(ctx, this.coins);\n        break;\n      default:\n        this.scoreBoard.easy(ctx, this.coins);\n    }\n\n    this.ship.draw(ctx);\n    this.allObjects().forEach((object) => {\n      object.draw(ctx);\n    });\n  }\n\n  isOutOfBounds(pos) {\n    return (pos[0] < 0) || (pos[1] < 0) ||\n      (pos[0] > Game.DIM_X) || (pos[1] > Game.DIM_Y);\n  }\n\n  moveObjects(delta) {\n    this.ship.move(delta);\n    this.allObjects().forEach((object) => {\n      object.move(delta);\n    });\n  }\n\n  randomPosition() {\n    return [\n      Game.DIM_X * Math.random(),\n      Game.DIM_Y * Math.random()\n    ];\n  }\n\n  remove(object) {\n    if (object instanceof Coin) {\n      this.coins++;\n      this.coin = this.addCoin();\n    } else if (object instanceof Clone) {\n      let idx = this.clones.indexOf(object);\n      this.clones.splice(idx, 1);\n    }\n  }\n\n  manageClones(){\n    if (this.coins > 0) {\n      if (this.cloneTimer == Game.CLONE_SPLIT) {\n        this.clones.push(this.addClone());\n        this.cloneTimer = 0;\n      } else {\n        this.cloneTimer++;\n      }\n    }\n  }\n\n  step(delta) {\n    this.manageClones();\n    this.moveObjects(delta);\n    this.checkCollisions();\n  }\n\n  wrap(pos) {\n    return [\n      Util.wrap(pos[0], Game.DIM_X), Util.wrap(pos[1], Game.DIM_Y)\n    ];\n  }\n}\n\nGame.CLONE_SPLIT = 60;\nGame.EASY_BG_COLOR = \"#c0dfd9\";\nGame.MEDIUM_BG_COLOR = \"#babdb7\";\nGame.HARD_BG_COLOR = \"#b3c2bf\";\nGame.DIM_X = 500;\nGame.DIM_Y = 500;\nGame.FPS = 32;\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 1\n ** module chunks = 0\n **/","const MovingObject = require(\"./moving_object\");\nconst Util = require(\"./util\");\nconst Coin = require('./coin');\n\nfunction randomColor() {\n  const hexDigits = \"0123456789ABCDEF\";\n\n  let color = \"#\";\n  for (let i = 0; i < 3; i ++) {\n    color += hexDigits[Math.floor((Math.random() * 16))];\n  }\n\n  return color;\n}\n\nclass Ship extends MovingObject {\n  constructor(options) {\n    options.color = options.color || '#fff',\n    options.radius = Ship.RADIUS,\n    options.vel = options.vel || [0, -2];\n    super(options);\n\n    this.path = [];\n    this.counter = 0;\n  }\n\n  draw(ctx, ogShip = true) {\n    if (ogShip) {\n      let dashes = this.path.slice(Math.max(this.path.length - 50, 1));\n      dashes = dashes.filter((x, idx) => { return x.vissible; });\n      dashes.forEach((point, idx) => {\n        ctx.fillStyle = `#000`;\n        ctx.globalAlpha = (idx) / dashes.length;\n        ctx.beginPath();\n        ctx.moveTo(...point.pos);\n        ctx.lineTo(point.pos[0] + point.vel[0], point.pos[1] + point.vel[1] );\n        ctx.stroke();\n      });\n    }\n\n    super.draw(ctx);\n  }\n\n  move(timeDelta) {\n    if (this.counter === 5) {\n      this.path.push({pos: this.pos,\n                      vel:this.vel,\n                      vissible: true});\n      this.counter = 0;\n    } else {\n      this.path.push({pos: this.pos,\n                      vel:this.vel,\n                      vissible: false});\n      this.counter++;\n    }\n    super.move(timeDelta);\n  }\n\n  changeDirection(delta) {\n    this.vel = Util.rotate(this.vel, delta);\n  }\n\n  collideWith(object) {\n    if (object instanceof Coin ) {\n      this.game.pathPos = this.path.length - 1;\n      this.game.remove(object);\n    } else {\n      this.game.over = true;\n    }\n  }\n\n}\n\nShip.RADIUS = 10;\nmodule.exports = Ship;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/ship.js\n ** module id = 2\n ** module chunks = 0\n **/","const Util = require(\"./util\");\n\nclass MovingObject {\n  constructor(options) {\n    this.pos = options.pos;\n    this.vel = options.vel || [0,0];\n    this.radius = options.radius;\n    this.color = options.color;\n    this.game = options.game;\n    this.isWrappable = true;\n  }\n\n  collideWith(otherObject) {\n    // default do nothing\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.globalAlpha = 1;\n    ctx.beginPath();\n    ctx.arc(\n      this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true\n    );\n    ctx.fill();\n  }\n\n  isCollidedWith(otherObject) {\n    const centerDist = Util.dist(this.pos, otherObject.pos);\n    return centerDist < (this.radius + otherObject.radius);\n  }\n\n  move(timeDelta) {\n    this.pos = [this.pos[0] + this.vel[0],\n                this.pos[1] + this.vel[1]];\n\n    if (this.game.isOutOfBounds(this.pos)) {\n      if (this.isWrappable) {\n        this.pos = this.game.wrap(this.pos);\n      } else {\n        this.remove();\n      }\n    }\n  }\n\n  remove() {\n    this.game.remove(this);\n  }\n}\n\nconst NORMAL_FRAME_TIME_DELTA = 1000/60;\n\nmodule.exports = MovingObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/moving_object.js\n ** module id = 3\n ** module chunks = 0\n **/","const ScoreBoard = require('./score_board');\n\nconst Util = {\n\n  // Normalize the length of the vector to 1, maintaining direction.\n  dir (vec) {\n    var norm = Util.norm(vec);\n    return Util.scale(vec, 1 / norm);\n  },\n\n  // Find distance between two points.\n  dist (pos1, pos2) {\n    return Math.sqrt(\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    );\n  },\n\n  // Find the length of the vector.\n  norm (vec) {\n    return Util.dist([0, 0], vec);\n  },\n\n  // Return a randomly oriented vector with the given length.\n  randomVec (length) {\n    var deg = 2 * Math.PI * Math.random();\n    return Util.scale([Math.sin(deg), Math.cos(deg)], length);\n  },\n\n  // Scale the length of a vector by the given amount.\n  scale (vec, m) {\n    return [vec[0] * m, vec[1] * m];\n  },\n\n  // Rotate a vector\n  rotate (ventor, angle) {\n    let newVector = ventor.slice(0);\n    let vec0 = newVector[0];\n    let vec1 = newVector[1];\n    newVector[0] = (vec0 * Math.cos(angle)) - (vec1 * Math.sin(angle));\n    newVector[1] = (vec0 * Math.sin(angle)) + (vec1 * Math.cos(angle));\n    return newVector;\n  },\n\n  // Generate odd size grid of n x n\n  oddSizeGrid (n) {\n    n = Math.floor(n - (n / 3) - 1);\n    let center = [500 / 2 , 500 / 2];\n    let grid = [];\n    for (let i = -(ScoreBoard.BLOCK_SIZE + ScoreBoard.PADDING) * n;\n             i < ((ScoreBoard.BLOCK_SIZE + ScoreBoard.PADDING) * n) + 1;\n             i += ScoreBoard.BLOCK_SIZE + ScoreBoard.PADDING) {\n      for (let j = -(ScoreBoard.BLOCK_SIZE + ScoreBoard.PADDING) * n;\n               j < ((ScoreBoard.BLOCK_SIZE + ScoreBoard.PADDING) * n) + 1;\n               j += ScoreBoard.BLOCK_SIZE + ScoreBoard.PADDING) {\n        grid.push([center[0] + i,center[1] + j]);\n      }\n    }\n    return grid;\n  },\n\n  // Generate even size grid of n x n\n  evenSizeGrid(n) {\n    n = Math.floor(n - (n / 4) - 1);\n    let center = [500 / 2 + (ScoreBoard.PADDING / 2) + (ScoreBoard.BLOCK_SIZE) / 2,\n                  500 / 2 + (ScoreBoard.PADDING / 2) + (ScoreBoard.BLOCK_SIZE / 2)];\n    let grid = [];\n    for (let i = -(ScoreBoard.BLOCK_SIZE + ScoreBoard.PADDING) * n;\n             i < ((ScoreBoard.BLOCK_SIZE + ScoreBoard.PADDING) * n);\n             i += ScoreBoard.BLOCK_SIZE + ScoreBoard.PADDING) {\n      for (let j = -(ScoreBoard.BLOCK_SIZE + ScoreBoard.PADDING) * n;\n               j < ((ScoreBoard.BLOCK_SIZE + ScoreBoard.PADDING) * n);\n               j += ScoreBoard.BLOCK_SIZE + ScoreBoard.PADDING) {\n        grid.push([center[0] + i,center[1] + j]);\n      }\n    }\n    return grid;\n  },\n\n  wrap (coord, max) {\n    if (coord < 0) {\n      return max - (coord % max);\n    } else if (coord > max) {\n      return coord % max;\n    } else {\n      return coord;\n    }\n  }\n};\n\nmodule.exports = Util;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/util.js\n ** module id = 4\n ** module chunks = 0\n **/","const Game = require(\"./game\");\n// const Util = require('./util');\n\nclass ScoreBoard {\n  constructor(options, Util) {\n    this.Util = Util;\n  }\n\n  easy(ctx, coins) {\n    let coinCount = 0;\n    let grid = this.Util.oddSizeGrid(3);\n    grid.forEach(block => {\n      if (coins > coinCount) {\n        this.draw(ctx, block, true, ScoreBoard.EASY_BLOCK_COLOR);\n        coinCount++;\n      } else {\n        this.draw(ctx, block, false, ScoreBoard.EASY_BLOCK_COLOR);\n      }\n    });\n  }\n\n  medium(ctx, coins) {\n    let coinCount = 0;\n    let grid = this.Util.evenSizeGrid(4);\n    grid.forEach(block => {\n      if (coins > coinCount) {\n        this.draw(ctx, block, true, ScoreBoard.MEDIUM_BLOCK_COLOR);\n        coinCount++;\n      } else {\n        this.draw(ctx, block, false, ScoreBoard.MEDIUM_BLOCK_COLOR);\n      }\n    });\n  }\n\n  hard(ctx, coins) {\n    let coinCount = 0;\n    let grid = this.Util.oddSizeGrid(5);\n    grid.forEach(block => {\n      if (coins > coinCount) {\n        this.draw(ctx, block, true, ScoreBoard.HARD_BLOCK_COLOR);\n        coinCount++;\n      } else {\n        this.draw(ctx, block, false, ScoreBoard.HARD_BLOCK_COLOR);\n      }\n    });\n  }\n\n  draw(ctx, center, isHighlighted, background){\n    if (isHighlighted) {\n      ctx.fillStyle = '#f1d29a';\n    } else {\n      ctx.fillStyle = background;\n    }\n    ctx.beginPath();\n    ctx.rect(center[0] - ScoreBoard.BLOCK_SIZE / 2,\n             center[1] - ScoreBoard.BLOCK_SIZE / 2,\n             ScoreBoard.BLOCK_SIZE, ScoreBoard.BLOCK_SIZE);\n    ctx.fill();\n  }\n}\n\nScoreBoard.EASY_BLOCK_COLOR = '#d7f8f2';\nScoreBoard.MEDIUM_BLOCK_COLOR = '#e9ece5';\nScoreBoard.HARD_BLOCK_COLOR = '#d4e6e2';\n\nScoreBoard.BLOCK_SIZE = 30;\nScoreBoard.PADDING = 5;\n\nmodule.exports = ScoreBoard;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/score_board.js\n ** module id = 5\n ** module chunks = 0\n **/","const Game = require('./game');\n\nclass GameView {\n  constructor(game, ctx) {\n    this.ctx = ctx;\n    this.game = game;\n    this.level = null;\n    this.paused = false;\n\n    this.selectLevel();\n  }\n\n  bindKeyHandlers() {\n    const ship = this.game.ship;\n\n    key('space', ()=> { this.pause(); });\n\n    Object.keys(GameView.MOVES).forEach((k) => {\n      let move = GameView.MOVES[k];\n      key(k, () => { ship.changeDirection(move); });\n    });\n  }\n\n  pause() {\n    this.paused = this.paused ? false : true;\n  }\n\n  selectLevel() {\n    let $buttons = $('.buttons');\n    let $easyButton = $(`<button class=\"easy-btn btn\">Easy</button>`);\n    let $mediumButton = $(`<button class=\"medium-btn btn\">Medium</button>`);\n    let $hardButton = $(`<button class=\"hard-btn btn\">Hard</button>`);\n\n    $buttons.append($easyButton);\n    $buttons.append($mediumButton);\n    $buttons.append($hardButton);\n\n    let thisView = this;\n\n    let setLevel = function (level) {\n      thisView.level = level;\n      $(\"button\").remove();\n      thisView.makeMove();\n    };\n\n    $(\".easy-btn\").click((event) => {\n      this.level = 'easy';\n      document.body.style.background = '#c0dfd9';\n      document.getElementById('homeScreen').style.display = \"none\";\n      this.start();\n    });\n\n    $(\".medium-btn\").click((event) => {\n      this.level = 'medium';\n      document.body.style.background = '#babdb7';\n      document.getElementById('homeScreen').style.display = \"none\";\n      this.start();\n    });\n\n    $(\".hard-btn\").click((event) => {\n      this.level = 'hard';\n      document.body.style.background = '#b3c2bf';\n      document.getElementById('homeScreen').style.display = \"none\";\n      this.start();\n    });\n  }\n\n  start() {\n    this.bindKeyHandlers();\n    this.lastTime = 0;\n\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  animate(time) {\n    const timeDelta = time - this.lastTime;\n\n    if ( this.paused ) {\n      document.getElementById('pauseScreen').style.display = \"flex\";\n    } else {\n      if (this.won() || this.game.over) {\n        this.renderResetScreen();\n        return;\n      } else {\n        document.getElementById('pauseScreen').style.display = \"none\";\n        this.game.step(timeDelta);\n        this.game.draw(this.ctx, this.level);\n      }\n    }\n\n    this.lastTime = time;\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  won(){\n    switch (this.level) {\n      case 'easy':\n        if ( this.game.coins === 9 ) { return true; }\n      case 'medium':\n        if ( this.game.coins === 16 ) { return true; }\n      case 'hard':\n        if ( this.game.coins === 25 ) { return true; }\n      default:\n        false;\n    }\n  }\n\n  renderResetScreen() {\n    let $endScreen = $('#endScreen');\n    if (this.won()) {\n      let $winMessage = $('<h1>You Win</h1>');\n      $endScreen.append($winMessage);\n    } else {\n      let $loseMessage = $('<h1>You Lose</h1>');\n      $endScreen.append($loseMessage);\n    }\n    let $reset = $('<button class=\"reset-btn btn\">Main Menu</button>');\n    $endScreen.append($reset);\n\n    document.getElementById('endScreen').style.display = 'flex';\n    $('.reset-btn').click(()=> {\n      $('.buttons').empty();\n      $('#endScreen').empty();\n      document.getElementById('endScreen').style.display = 'none';\n      document.getElementById('homeScreen').style.display = 'flex';\n\n      document.body.style.background = '#daf9f2';\n\n      const canvasEl = document.getElementById(\"gameView\");\n      canvasEl.width = Game.DIM_X;\n      canvasEl.height = Game.DIM_Y;\n\n      const ctx = canvasEl.getContext(\"2d\");\n      const game = new Game();\n      new GameView(game, ctx);\n    });\n  }\n\n}\n\nGameView.MOVES = {\n  \"a\": -(20 * Math.PI / 360),\n  \"d\": (20 * Math.PI / 360),\n  \"left\": -(20 * Math.PI / 360),\n  \"right\": (20 * Math.PI / 360),\n};\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game_view.js\n ** module id = 6\n ** module chunks = 0\n **/","const MovingObject = require(\"./moving_object\");\n\nclass Coin extends MovingObject {\n  constructor(options) {\n    options.radius = 7;\n    options.color = '#fff';\n    super(options);\n  }\n\n  draw(ctx) {\n    for (let i = 3; i < 7; i += 2) {\n      ctx.strokeStyle=\"#fff\";\n      ctx.beginPath();\n      ctx.arc(\n        this.pos[0], this.pos[1], this.radius + i, 0, 2 * Math.PI, true\n      );\n      ctx.stroke();\n    }\n\n    super.draw(ctx);\n  }\n\n}\n\nmodule.exports = Coin;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/coin.js\n ** module id = 7\n ** module chunks = 0\n **/","const Ship = require(\"./ship\");\nconst Util = require('./util');\nconst MovingObject = require(\"./moving_object\");\n\nclass Clone extends Ship {\n  constructor(options) {\n    options.color = '#444',\n    options.radius = Ship.RADIUS,\n    options.vel = options.vel || [0, -2];\n    super(options);\n\n    this.ogShip = options.ogShip;\n    this.path = this.ogShip.path.slice(0);\n    this.lifeSpan = options.pathPos;\n  }\n\n  move() {\n    if (this.lifeSpan > 0) {\n      this.lifeSpan--;\n      this.pos = this.path.shift().pos;\n    } else {\n      this.game.remove(this);\n    }\n  }\n\n  draw (ctx) {\n    super.draw(ctx, false);\n  }\n\n  changeDirection(delta) {\n    this.vel = Util.rotate(this.vel, delta);\n  }\n\n}\n\nmodule.exports = Clone;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/clone.js\n ** module id = 8\n ** module chunks = 0\n **/"],"sourceRoot":""}